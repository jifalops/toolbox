package com.jifalops.toolbox.android.deviceinfoelement;

import android.content.Context;
import android.os.Build;
import android.view.KeyCharacterMap;
import android.view.KeyEvent;

import com.jifalops.toolbox.android.R;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;


public class Keys extends AbsElement {

    private static final String DEVICE_ALLY = "Ally";

	public final String KEYCODE_0;
	public final String KEYCODE_1;
	public final String KEYCODE_2;
	public final String KEYCODE_3;
	public final String KEYCODE_3D_MODE;
	public final String KEYCODE_4;
	public final String KEYCODE_5;
	public final String KEYCODE_6;
	public final String KEYCODE_7;
	public final String KEYCODE_8;
	public final String KEYCODE_9;
	public final String KEYCODE_A;
	public final String KEYCODE_ALT_LEFT;
	public final String KEYCODE_ALT_RIGHT;
	public final String KEYCODE_APOSTROPHE;
	public final String KEYCODE_APP_SWITCH;
	public final String KEYCODE_AT;
	public final String KEYCODE_AVR_INPUT;
	public final String KEYCODE_AVR_POWER;
	public final String KEYCODE_B;
	public final String KEYCODE_BACK;
	public final String KEYCODE_BACKSLASH;
	public final String KEYCODE_BOOKMARK;
	public final String KEYCODE_BREAK;
	public final String KEYCODE_BUTTON_1;
	public final String KEYCODE_BUTTON_10;
	public final String KEYCODE_BUTTON_11;
	public final String KEYCODE_BUTTON_12;
	public final String KEYCODE_BUTTON_13;
	public final String KEYCODE_BUTTON_14;
	public final String KEYCODE_BUTTON_15;
	public final String KEYCODE_BUTTON_16;
	public final String KEYCODE_BUTTON_2;
	public final String KEYCODE_BUTTON_3;
	public final String KEYCODE_BUTTON_4;
	public final String KEYCODE_BUTTON_5;
	public final String KEYCODE_BUTTON_6;
	public final String KEYCODE_BUTTON_7;
	public final String KEYCODE_BUTTON_8;
	public final String KEYCODE_BUTTON_9;
	public final String KEYCODE_BUTTON_A;
	public final String KEYCODE_BUTTON_B;
	public final String KEYCODE_BUTTON_C;
	public final String KEYCODE_BUTTON_L1;
	public final String KEYCODE_BUTTON_L2;
	public final String KEYCODE_BUTTON_MODE;
	public final String KEYCODE_BUTTON_R1;
	public final String KEYCODE_BUTTON_R2;
	public final String KEYCODE_BUTTON_SELECT;
	public final String KEYCODE_BUTTON_START;
	public final String KEYCODE_BUTTON_THUMBL;
	public final String KEYCODE_BUTTON_THUMBR;
	public final String KEYCODE_BUTTON_X;
	public final String KEYCODE_BUTTON_Y;
	public final String KEYCODE_BUTTON_Z;
	public final String KEYCODE_C;
	public final String KEYCODE_CALCULATOR;
	public final String KEYCODE_CALENDAR;
	public final String KEYCODE_CALL;
	public final String KEYCODE_CAMERA;
	public final String KEYCODE_CAPS_LOCK;
	public final String KEYCODE_CAPTIONS;
	public final String KEYCODE_CHANNEL_DOWN;
	public final String KEYCODE_CHANNEL_UP;
	public final String KEYCODE_CLEAR;
	public final String KEYCODE_COMMA;
	public final String KEYCODE_CONTACTS;
	public final String KEYCODE_CTRL_LEFT;
	public final String KEYCODE_CTRL_RIGHT;
	public final String KEYCODE_D;
	public final String KEYCODE_DEL;
	public final String KEYCODE_DPAD_CENTER;
	public final String KEYCODE_DPAD_DOWN;
	public final String KEYCODE_DPAD_LEFT;
	public final String KEYCODE_DPAD_RIGHT;
	public final String KEYCODE_DPAD_UP;
	public final String KEYCODE_DVR;
	public final String KEYCODE_E;
	public final String KEYCODE_ENDCALL;
	public final String KEYCODE_ENTER;
	public final String KEYCODE_ENVELOPE;
	public final String KEYCODE_EQUALS;
	public final String KEYCODE_ESCAPE;
	public final String KEYCODE_EXPLORER;
	public final String KEYCODE_F;
	public final String KEYCODE_F1;
	public final String KEYCODE_F10;
	public final String KEYCODE_F11;
	public final String KEYCODE_F12;
	public final String KEYCODE_F2;
	public final String KEYCODE_F3;
	public final String KEYCODE_F4;
	public final String KEYCODE_F5;
	public final String KEYCODE_F6;
	public final String KEYCODE_F7;
	public final String KEYCODE_F8;
	public final String KEYCODE_F9;
	public final String KEYCODE_FOCUS;
	public final String KEYCODE_FORWARD;
	public final String KEYCODE_FORWARD_DEL;
	public final String KEYCODE_FUNCTION;
	public final String KEYCODE_G;
	public final String KEYCODE_GRAVE;
	public final String KEYCODE_GUIDE;
	public final String KEYCODE_H;
	public final String KEYCODE_HEADSETHOOK;
	public final String KEYCODE_HOME;
	public final String KEYCODE_I;
	public final String KEYCODE_INFO;
	public final String KEYCODE_INSERT;
	public final String KEYCODE_J;
	public final String KEYCODE_K;
	public final String KEYCODE_L;
	public final String KEYCODE_LANGUAGE_SWITCH;
	public final String KEYCODE_LEFT_BRACKET;
	public final String KEYCODE_M;
	public final String KEYCODE_MANNER_MODE;
	public final String KEYCODE_MEDIA_CLOSE;
	public final String KEYCODE_MEDIA_EJECT;
	public final String KEYCODE_MEDIA_FAST_FORWARD;
	public final String KEYCODE_MEDIA_NEXT;
	public final String KEYCODE_MEDIA_PAUSE;
	public final String KEYCODE_MEDIA_PLAY;
	public final String KEYCODE_MEDIA_PLAY_PAUSE;
	public final String KEYCODE_MEDIA_PREVIOUS;
	public final String KEYCODE_MEDIA_RECORD;
	public final String KEYCODE_MEDIA_REWIND;
	public final String KEYCODE_MEDIA_STOP;
	public final String KEYCODE_MENU;
	public final String KEYCODE_META_LEFT;
	public final String KEYCODE_META_RIGHT;
	public final String KEYCODE_MINUS;
	public final String KEYCODE_MOVE_END;
	public final String KEYCODE_MOVE_HOME;
	public final String KEYCODE_MUSIC;
	public final String KEYCODE_MUTE;
	public final String KEYCODE_N;
	public final String KEYCODE_NOTIFICATION;
	public final String KEYCODE_NUM;
	public final String KEYCODE_NUMPAD_0;
	public final String KEYCODE_NUMPAD_1;
	public final String KEYCODE_NUMPAD_2;
	public final String KEYCODE_NUMPAD_3;
	public final String KEYCODE_NUMPAD_4;
	public final String KEYCODE_NUMPAD_5;
	public final String KEYCODE_NUMPAD_6;
	public final String KEYCODE_NUMPAD_7;
	public final String KEYCODE_NUMPAD_8;
	public final String KEYCODE_NUMPAD_9;
	public final String KEYCODE_NUMPAD_ADD;
	public final String KEYCODE_NUMPAD_COMMA;
	public final String KEYCODE_NUMPAD_DIVIDE;
	public final String KEYCODE_NUMPAD_DOT;
	public final String KEYCODE_NUMPAD_ENTER;
	public final String KEYCODE_NUMPAD_EQUALS;
	public final String KEYCODE_NUMPAD_LEFT_PAREN;
	public final String KEYCODE_NUMPAD_MULTIPLY;
	public final String KEYCODE_NUMPAD_RIGHT_PAREN;
	public final String KEYCODE_NUMPAD_SUBTRACT;
	public final String KEYCODE_NUM_LOCK;
	public final String KEYCODE_O;
	public final String KEYCODE_P;
	public final String KEYCODE_PAGE_DOWN;
	public final String KEYCODE_PAGE_UP;
	public final String KEYCODE_PERIOD;
	public final String KEYCODE_PICTSYMBOLS;
	public final String KEYCODE_PLUS;
	public final String KEYCODE_POUND;
	public final String KEYCODE_POWER;
	public final String KEYCODE_PROG_BLUE;
	public final String KEYCODE_PROG_GREEN;
	public final String KEYCODE_PROG_RED;
	public final String KEYCODE_PROG_YELLOW;
	public final String KEYCODE_Q;
	public final String KEYCODE_R;
	public final String KEYCODE_RIGHT_BRACKET;
	public final String KEYCODE_S;
	public final String KEYCODE_SCROLL_LOCK;
	public final String KEYCODE_SEARCH;
	public final String KEYCODE_SEMICOLON;
	public final String KEYCODE_SETTINGS;
	public final String KEYCODE_SHIFT_LEFT;
	public final String KEYCODE_SHIFT_RIGHT;
	public final String KEYCODE_SLASH;
	public final String KEYCODE_SOFT_LEFT;
	public final String KEYCODE_SOFT_RIGHT;
	public final String KEYCODE_SPACE;
	public final String KEYCODE_STAR;
	public final String KEYCODE_STB_INPUT;
	public final String KEYCODE_STB_POWER;
	public final String KEYCODE_SWITCH_CHARSET;
	public final String KEYCODE_SYM;
	public final String KEYCODE_SYSRQ;
	public final String KEYCODE_T;
	public final String KEYCODE_TAB;
	public final String KEYCODE_TV;
	public final String KEYCODE_TV_INPUT;
	public final String KEYCODE_TV_POWER;
	public final String KEYCODE_U;
	public final String KEYCODE_UNKNOWN;
	public final String KEYCODE_V;
	public final String KEYCODE_VOLUME_DOWN;
	public final String KEYCODE_VOLUME_MUTE;
	public final String KEYCODE_VOLUME_UP;
	public final String KEYCODE_W;
	public final String KEYCODE_WINDOW;
	public final String KEYCODE_X;
	public final String KEYCODE_Y;
	public final String KEYCODE_Z;
	public final String KEYCODE_ZOOM_IN;
	public final String KEYCODE_ZOOM_OUT;
	
	private final List<Integer> mAvailable;
	private final List<Integer> mUnavailable;
	
	public Keys(Context context) throws UnavailableFeatureException {
		super(context);
		if (Build.MODEL.equals(DEVICE_ALLY)) {
			throw new UnavailableFeatureException("The LG Ally cannot use this class.");
		}
		KEYCODE_0 = context.getString(R.string.keycode_0);
		KEYCODE_1 = context.getString(R.string.keycode_1);
		KEYCODE_2 = context.getString(R.string.keycode_2);
		KEYCODE_3 = context.getString(R.string.keycode_3);
		KEYCODE_3D_MODE = context.getString(R.string.keycode_3d_mode);
		KEYCODE_4 = context.getString(R.string.keycode_4);
		KEYCODE_5 = context.getString(R.string.keycode_5);
		KEYCODE_6 = context.getString(R.string.keycode_6);
		KEYCODE_7 = context.getString(R.string.keycode_7);
		KEYCODE_8 = context.getString(R.string.keycode_8);
		KEYCODE_9 = context.getString(R.string.keycode_9);
		KEYCODE_A = context.getString(R.string.keycode_a);
		KEYCODE_ALT_LEFT = context.getString(R.string.keycode_alt_left);
		KEYCODE_ALT_RIGHT = context.getString(R.string.keycode_alt_right);
		KEYCODE_APOSTROPHE = context.getString(R.string.keycode_apostrophe);
		KEYCODE_APP_SWITCH = context.getString(R.string.keycode_app_switch);
		KEYCODE_AT = context.getString(R.string.keycode_at);
		KEYCODE_AVR_INPUT = context.getString(R.string.keycode_avr_input);
		KEYCODE_AVR_POWER = context.getString(R.string.keycode_avr_power);
		KEYCODE_B = context.getString(R.string.keycode_b);
		KEYCODE_BACK = context.getString(R.string.keycode_back);
		KEYCODE_BACKSLASH = context.getString(R.string.keycode_backslash);
		KEYCODE_BOOKMARK = context.getString(R.string.keycode_bookmark);
		KEYCODE_BREAK = context.getString(R.string.keycode_break);
		KEYCODE_BUTTON_1 = context.getString(R.string.keycode_button_1);
		KEYCODE_BUTTON_10 = context.getString(R.string.keycode_button_10);
		KEYCODE_BUTTON_11 = context.getString(R.string.keycode_button_11);
		KEYCODE_BUTTON_12 = context.getString(R.string.keycode_button_12);
		KEYCODE_BUTTON_13 = context.getString(R.string.keycode_button_13);
		KEYCODE_BUTTON_14 = context.getString(R.string.keycode_button_14);
		KEYCODE_BUTTON_15 = context.getString(R.string.keycode_button_15);
		KEYCODE_BUTTON_16 = context.getString(R.string.keycode_button_16);
		KEYCODE_BUTTON_2 = context.getString(R.string.keycode_button_2);
		KEYCODE_BUTTON_3 = context.getString(R.string.keycode_button_3);
		KEYCODE_BUTTON_4 = context.getString(R.string.keycode_button_4);
		KEYCODE_BUTTON_5 = context.getString(R.string.keycode_button_5);
		KEYCODE_BUTTON_6 = context.getString(R.string.keycode_button_6);
		KEYCODE_BUTTON_7 = context.getString(R.string.keycode_button_7);
		KEYCODE_BUTTON_8 = context.getString(R.string.keycode_button_8);
		KEYCODE_BUTTON_9 = context.getString(R.string.keycode_button_9);
		KEYCODE_BUTTON_A = context.getString(R.string.keycode_button_a);
		KEYCODE_BUTTON_B = context.getString(R.string.keycode_button_b);
		KEYCODE_BUTTON_C = context.getString(R.string.keycode_button_c);
		KEYCODE_BUTTON_L1 = context.getString(R.string.keycode_button_l1);
		KEYCODE_BUTTON_L2 = context.getString(R.string.keycode_button_l2);
		KEYCODE_BUTTON_MODE = context.getString(R.string.keycode_button_mode);
		KEYCODE_BUTTON_R1 = context.getString(R.string.keycode_button_r1);
		KEYCODE_BUTTON_R2 = context.getString(R.string.keycode_button_r2);
		KEYCODE_BUTTON_SELECT = context.getString(R.string.keycode_button_select);
		KEYCODE_BUTTON_START = context.getString(R.string.keycode_button_start);
		KEYCODE_BUTTON_THUMBL = context.getString(R.string.keycode_button_thumbl);
		KEYCODE_BUTTON_THUMBR = context.getString(R.string.keycode_button_thumbr);
		KEYCODE_BUTTON_X = context.getString(R.string.keycode_button_x);
		KEYCODE_BUTTON_Y = context.getString(R.string.keycode_button_y);
		KEYCODE_BUTTON_Z = context.getString(R.string.keycode_button_z);
		KEYCODE_C = context.getString(R.string.keycode_c);
		KEYCODE_CALCULATOR = context.getString(R.string.keycode_calculator);
		KEYCODE_CALENDAR = context.getString(R.string.keycode_calendar);
		KEYCODE_CALL = context.getString(R.string.keycode_call);
		KEYCODE_CAMERA = context.getString(R.string.keycode_camera);
		KEYCODE_CAPS_LOCK = context.getString(R.string.keycode_caps_lock);
		KEYCODE_CAPTIONS = context.getString(R.string.keycode_captions);
		KEYCODE_CHANNEL_DOWN = context.getString(R.string.keycode_channel_down);
		KEYCODE_CHANNEL_UP = context.getString(R.string.keycode_channel_up);
		KEYCODE_CLEAR = context.getString(R.string.keycode_clear);
		KEYCODE_COMMA = context.getString(R.string.keycode_comma);
		KEYCODE_CONTACTS = context.getString(R.string.keycode_contacts);
		KEYCODE_CTRL_LEFT = context.getString(R.string.keycode_ctrl_left);
		KEYCODE_CTRL_RIGHT = context.getString(R.string.keycode_ctrl_right);
		KEYCODE_D = context.getString(R.string.keycode_d);
		KEYCODE_DEL = context.getString(R.string.keycode_del);
		KEYCODE_DPAD_CENTER = context.getString(R.string.keycode_dpad_center);
		KEYCODE_DPAD_DOWN = context.getString(R.string.keycode_dpad_down);
		KEYCODE_DPAD_LEFT = context.getString(R.string.keycode_dpad_left);
		KEYCODE_DPAD_RIGHT = context.getString(R.string.keycode_dpad_right);
		KEYCODE_DPAD_UP = context.getString(R.string.keycode_dpad_up);
		KEYCODE_DVR = context.getString(R.string.keycode_dvr);
		KEYCODE_E = context.getString(R.string.keycode_e);
		KEYCODE_ENDCALL = context.getString(R.string.keycode_endcall);
		KEYCODE_ENTER = context.getString(R.string.keycode_enter);
		KEYCODE_ENVELOPE = context.getString(R.string.keycode_envelope);
		KEYCODE_EQUALS = context.getString(R.string.keycode_equals);
		KEYCODE_ESCAPE = context.getString(R.string.keycode_escape);
		KEYCODE_EXPLORER = context.getString(R.string.keycode_explorer);
		KEYCODE_F = context.getString(R.string.keycode_f);
		KEYCODE_F1 = context.getString(R.string.keycode_f1);
		KEYCODE_F10 = context.getString(R.string.keycode_f10);
		KEYCODE_F11 = context.getString(R.string.keycode_f11);
		KEYCODE_F12 = context.getString(R.string.keycode_f12);
		KEYCODE_F2 = context.getString(R.string.keycode_f2);
		KEYCODE_F3 = context.getString(R.string.keycode_f3);
		KEYCODE_F4 = context.getString(R.string.keycode_f4);
		KEYCODE_F5 = context.getString(R.string.keycode_f5);
		KEYCODE_F6 = context.getString(R.string.keycode_f6);
		KEYCODE_F7 = context.getString(R.string.keycode_f7);
		KEYCODE_F8 = context.getString(R.string.keycode_f8);
		KEYCODE_F9 = context.getString(R.string.keycode_f9);
		KEYCODE_FOCUS = context.getString(R.string.keycode_focus);
		KEYCODE_FORWARD = context.getString(R.string.keycode_forward);
		KEYCODE_FORWARD_DEL = context.getString(R.string.keycode_forward_del);
		KEYCODE_FUNCTION = context.getString(R.string.keycode_function);
		KEYCODE_G = context.getString(R.string.keycode_g);
		KEYCODE_GRAVE = context.getString(R.string.keycode_grave);
		KEYCODE_GUIDE = context.getString(R.string.keycode_guide);
		KEYCODE_H = context.getString(R.string.keycode_h);
		KEYCODE_HEADSETHOOK = context.getString(R.string.keycode_headsethook);
		KEYCODE_HOME = context.getString(R.string.keycode_home);
		KEYCODE_I = context.getString(R.string.keycode_i);
		KEYCODE_INFO = context.getString(R.string.keycode_info);
		KEYCODE_INSERT = context.getString(R.string.keycode_insert);
		KEYCODE_J = context.getString(R.string.keycode_j);
		KEYCODE_K = context.getString(R.string.keycode_k);
		KEYCODE_L = context.getString(R.string.keycode_l);
		KEYCODE_LANGUAGE_SWITCH = context.getString(R.string.keycode_language_switch);
		KEYCODE_LEFT_BRACKET = context.getString(R.string.keycode_left_bracket);
		KEYCODE_M = context.getString(R.string.keycode_m);
		KEYCODE_MANNER_MODE = context.getString(R.string.keycode_manner_mode);
		KEYCODE_MEDIA_CLOSE = context.getString(R.string.keycode_media_close);
		KEYCODE_MEDIA_EJECT = context.getString(R.string.keycode_media_eject);
		KEYCODE_MEDIA_FAST_FORWARD = context.getString(R.string.keycode_media_fast_forward);
		KEYCODE_MEDIA_NEXT = context.getString(R.string.keycode_media_next);
		KEYCODE_MEDIA_PAUSE = context.getString(R.string.keycode_media_pause);
		KEYCODE_MEDIA_PLAY = context.getString(R.string.keycode_media_play);
		KEYCODE_MEDIA_PLAY_PAUSE = context.getString(R.string.keycode_media_play_pause);
		KEYCODE_MEDIA_PREVIOUS = context.getString(R.string.keycode_media_previous);
		KEYCODE_MEDIA_RECORD = context.getString(R.string.keycode_media_record);
		KEYCODE_MEDIA_REWIND = context.getString(R.string.keycode_media_rewind);
		KEYCODE_MEDIA_STOP = context.getString(R.string.keycode_media_stop);
		KEYCODE_MENU = context.getString(R.string.keycode_menu);
		KEYCODE_META_LEFT = context.getString(R.string.keycode_meta_left);
		KEYCODE_META_RIGHT = context.getString(R.string.keycode_meta_right);
		KEYCODE_MINUS = context.getString(R.string.keycode_minus);
		KEYCODE_MOVE_END = context.getString(R.string.keycode_move_end);
		KEYCODE_MOVE_HOME = context.getString(R.string.keycode_move_home);
		KEYCODE_MUSIC = context.getString(R.string.keycode_music);
		KEYCODE_MUTE = context.getString(R.string.keycode_mute);
		KEYCODE_N = context.getString(R.string.keycode_n);
		KEYCODE_NOTIFICATION = context.getString(R.string.keycode_notification);
		KEYCODE_NUM = context.getString(R.string.keycode_num);
		KEYCODE_NUMPAD_0 = context.getString(R.string.keycode_numpad_0);
		KEYCODE_NUMPAD_1 = context.getString(R.string.keycode_numpad_1);
		KEYCODE_NUMPAD_2 = context.getString(R.string.keycode_numpad_2);
		KEYCODE_NUMPAD_3 = context.getString(R.string.keycode_numpad_3);
		KEYCODE_NUMPAD_4 = context.getString(R.string.keycode_numpad_4);
		KEYCODE_NUMPAD_5 = context.getString(R.string.keycode_numpad_5);
		KEYCODE_NUMPAD_6 = context.getString(R.string.keycode_numpad_6);
		KEYCODE_NUMPAD_7 = context.getString(R.string.keycode_numpad_7);
		KEYCODE_NUMPAD_8 = context.getString(R.string.keycode_numpad_8);
		KEYCODE_NUMPAD_9 = context.getString(R.string.keycode_numpad_9);
		KEYCODE_NUMPAD_ADD = context.getString(R.string.keycode_numpad_add);
		KEYCODE_NUMPAD_COMMA = context.getString(R.string.keycode_numpad_comma);
		KEYCODE_NUMPAD_DIVIDE = context.getString(R.string.keycode_numpad_divide);
		KEYCODE_NUMPAD_DOT = context.getString(R.string.keycode_numpad_dot);
		KEYCODE_NUMPAD_ENTER = context.getString(R.string.keycode_numpad_enter);
		KEYCODE_NUMPAD_EQUALS = context.getString(R.string.keycode_numpad_equals);
		KEYCODE_NUMPAD_LEFT_PAREN = context.getString(R.string.keycode_numpad_left_paren);
		KEYCODE_NUMPAD_MULTIPLY = context.getString(R.string.keycode_numpad_multiply);
		KEYCODE_NUMPAD_RIGHT_PAREN = context.getString(R.string.keycode_numpad_right_paren);
		KEYCODE_NUMPAD_SUBTRACT = context.getString(R.string.keycode_numpad_subtract);
		KEYCODE_NUM_LOCK = context.getString(R.string.keycode_num_lock);
		KEYCODE_O = context.getString(R.string.keycode_o);
		KEYCODE_P = context.getString(R.string.keycode_p);
		KEYCODE_PAGE_DOWN = context.getString(R.string.keycode_page_down);
		KEYCODE_PAGE_UP = context.getString(R.string.keycode_page_up);
		KEYCODE_PERIOD = context.getString(R.string.keycode_period);
		KEYCODE_PICTSYMBOLS = context.getString(R.string.keycode_pictsymbols);
		KEYCODE_PLUS = context.getString(R.string.keycode_plus);
		KEYCODE_POUND = context.getString(R.string.keycode_pound);
		KEYCODE_POWER = context.getString(R.string.keycode_power);
		KEYCODE_PROG_BLUE = context.getString(R.string.keycode_prog_blue);
		KEYCODE_PROG_GREEN = context.getString(R.string.keycode_prog_green);
		KEYCODE_PROG_RED = context.getString(R.string.keycode_prog_red);
		KEYCODE_PROG_YELLOW = context.getString(R.string.keycode_prog_yellow);
		KEYCODE_Q = context.getString(R.string.keycode_q);
		KEYCODE_R = context.getString(R.string.keycode_r);
		KEYCODE_RIGHT_BRACKET = context.getString(R.string.keycode_right_bracket);
		KEYCODE_S = context.getString(R.string.keycode_s);
		KEYCODE_SCROLL_LOCK = context.getString(R.string.keycode_scroll_lock);
		KEYCODE_SEARCH = context.getString(R.string.keycode_search);
		KEYCODE_SEMICOLON = context.getString(R.string.keycode_semicolon);
		KEYCODE_SETTINGS = context.getString(R.string.keycode_settings);
		KEYCODE_SHIFT_LEFT = context.getString(R.string.keycode_shift_left);
		KEYCODE_SHIFT_RIGHT = context.getString(R.string.keycode_shift_right);
		KEYCODE_SLASH = context.getString(R.string.keycode_slash);
		KEYCODE_SOFT_LEFT = context.getString(R.string.keycode_soft_left);
		KEYCODE_SOFT_RIGHT = context.getString(R.string.keycode_soft_right);
		KEYCODE_SPACE = context.getString(R.string.keycode_space);
		KEYCODE_STAR = context.getString(R.string.keycode_star);
		KEYCODE_STB_INPUT = context.getString(R.string.keycode_stb_input);
		KEYCODE_STB_POWER = context.getString(R.string.keycode_stb_power);
		KEYCODE_SWITCH_CHARSET = context.getString(R.string.keycode_switch_charset);
		KEYCODE_SYM = context.getString(R.string.keycode_sym);
		KEYCODE_SYSRQ = context.getString(R.string.keycode_sysrq);
		KEYCODE_T = context.getString(R.string.keycode_t);
		KEYCODE_TAB = context.getString(R.string.keycode_tab);
		KEYCODE_TV = context.getString(R.string.keycode_tv);
		KEYCODE_TV_INPUT = context.getString(R.string.keycode_tv_input);
		KEYCODE_TV_POWER = context.getString(R.string.keycode_tv_power);
		KEYCODE_U = context.getString(R.string.keycode_u);
		KEYCODE_UNKNOWN = context.getString(R.string.keycode_unknown);
		KEYCODE_V = context.getString(R.string.keycode_v);
		KEYCODE_VOLUME_DOWN = context.getString(R.string.keycode_volume_down);
		KEYCODE_VOLUME_MUTE = context.getString(R.string.keycode_volume_mute);
		KEYCODE_VOLUME_UP = context.getString(R.string.keycode_volume_up);
		KEYCODE_W = context.getString(R.string.keycode_w);
		KEYCODE_WINDOW = context.getString(R.string.keycode_window);
		KEYCODE_X = context.getString(R.string.keycode_x);
		KEYCODE_Y = context.getString(R.string.keycode_y);
		KEYCODE_Z = context.getString(R.string.keycode_z);
		KEYCODE_ZOOM_IN = context.getString(R.string.keycode_zoom_in);
		KEYCODE_ZOOM_OUT = context.getString(R.string.keycode_zoom_out);
		
		mAvailable = new ArrayList<Integer>();
		mUnavailable = new ArrayList<Integer>();
		checkKeys();
	}
	
	public List<Integer> getAvailableKeys() {
		return mAvailable;
	}
	
	public List<Integer> getUnavailableKeys() {
		return mUnavailable;
	}
	
	private void checkKey(int keyCode) {
		if (KeyCharacterMap.deviceHasKey(keyCode)) mAvailable.add(keyCode);
		else mUnavailable.add(keyCode);
	}
	
	private void checkKeys() {		
		checkKey(KeyEvent.KEYCODE_0);
		checkKey(KeyEvent.KEYCODE_1);
		checkKey(KeyEvent.KEYCODE_2);
		checkKey(KeyEvent.KEYCODE_3);
		checkKey(KeyEvent.KEYCODE_4);
		checkKey(KeyEvent.KEYCODE_5);
		checkKey(KeyEvent.KEYCODE_6);
		checkKey(KeyEvent.KEYCODE_7);
		checkKey(KeyEvent.KEYCODE_8);
		checkKey(KeyEvent.KEYCODE_9);
		checkKey(KeyEvent.KEYCODE_A);
		checkKey(KeyEvent.KEYCODE_ALT_LEFT);
		checkKey(KeyEvent.KEYCODE_ALT_RIGHT);
		checkKey(KeyEvent.KEYCODE_APOSTROPHE);
		checkKey(KeyEvent.KEYCODE_AT);
		checkKey(KeyEvent.KEYCODE_B);
		checkKey(KeyEvent.KEYCODE_BACK);
		checkKey(KeyEvent.KEYCODE_BACKSLASH);
		checkKey(KeyEvent.KEYCODE_C);
		checkKey(KeyEvent.KEYCODE_CALL);
		checkKey(KeyEvent.KEYCODE_CAMERA);
		checkKey(KeyEvent.KEYCODE_CLEAR);
		checkKey(KeyEvent.KEYCODE_COMMA);
		checkKey(KeyEvent.KEYCODE_D);
		checkKey(KeyEvent.KEYCODE_DEL);
		checkKey(KeyEvent.KEYCODE_DPAD_CENTER);
		checkKey(KeyEvent.KEYCODE_DPAD_DOWN);
		checkKey(KeyEvent.KEYCODE_DPAD_LEFT);
		checkKey(KeyEvent.KEYCODE_DPAD_RIGHT);
		checkKey(KeyEvent.KEYCODE_DPAD_UP);
		checkKey(KeyEvent.KEYCODE_E);
		checkKey(KeyEvent.KEYCODE_ENDCALL);
		checkKey(KeyEvent.KEYCODE_ENTER);
		checkKey(KeyEvent.KEYCODE_ENVELOPE);
		checkKey(KeyEvent.KEYCODE_EQUALS);
		checkKey(KeyEvent.KEYCODE_EXPLORER);
		checkKey(KeyEvent.KEYCODE_F);
		checkKey(KeyEvent.KEYCODE_FOCUS);
		checkKey(KeyEvent.KEYCODE_G);
		checkKey(KeyEvent.KEYCODE_GRAVE);
		checkKey(KeyEvent.KEYCODE_H);
		checkKey(KeyEvent.KEYCODE_HEADSETHOOK);
		checkKey(KeyEvent.KEYCODE_HOME);
		checkKey(KeyEvent.KEYCODE_I);
		checkKey(KeyEvent.KEYCODE_J);
		checkKey(KeyEvent.KEYCODE_K);
		checkKey(KeyEvent.KEYCODE_L);
		checkKey(KeyEvent.KEYCODE_LEFT_BRACKET);
		checkKey(KeyEvent.KEYCODE_M);
		checkKey(KeyEvent.KEYCODE_MEDIA_FAST_FORWARD);
		checkKey(KeyEvent.KEYCODE_MEDIA_NEXT);
		checkKey(KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE);
		checkKey(KeyEvent.KEYCODE_MEDIA_PREVIOUS);
		checkKey(KeyEvent.KEYCODE_MEDIA_REWIND);
		checkKey(KeyEvent.KEYCODE_MEDIA_STOP);
		checkKey(KeyEvent.KEYCODE_MENU);
		checkKey(KeyEvent.KEYCODE_MINUS);
		checkKey(KeyEvent.KEYCODE_MUTE);
		checkKey(KeyEvent.KEYCODE_N);
		checkKey(KeyEvent.KEYCODE_NOTIFICATION);
		checkKey(KeyEvent.KEYCODE_NUM);
		checkKey(KeyEvent.KEYCODE_O);
		checkKey(KeyEvent.KEYCODE_P);
		checkKey(KeyEvent.KEYCODE_PERIOD);
		checkKey(KeyEvent.KEYCODE_PLUS);
		checkKey(KeyEvent.KEYCODE_POUND);
		checkKey(KeyEvent.KEYCODE_POWER);
		checkKey(KeyEvent.KEYCODE_Q);
		checkKey(KeyEvent.KEYCODE_R);
		checkKey(KeyEvent.KEYCODE_RIGHT_BRACKET);
		checkKey(KeyEvent.KEYCODE_S);
		checkKey(KeyEvent.KEYCODE_SEARCH);
		checkKey(KeyEvent.KEYCODE_SEMICOLON);
		checkKey(KeyEvent.KEYCODE_SHIFT_LEFT);
		checkKey(KeyEvent.KEYCODE_SHIFT_RIGHT);
		checkKey(KeyEvent.KEYCODE_SLASH);
		checkKey(KeyEvent.KEYCODE_SOFT_LEFT);
		checkKey(KeyEvent.KEYCODE_SOFT_RIGHT);
		checkKey(KeyEvent.KEYCODE_SPACE);
		checkKey(KeyEvent.KEYCODE_STAR);
		checkKey(KeyEvent.KEYCODE_SYM);
		checkKey(KeyEvent.KEYCODE_T);
		checkKey(KeyEvent.KEYCODE_TAB);
		checkKey(KeyEvent.KEYCODE_U);
		checkKey(KeyEvent.KEYCODE_UNKNOWN);
		checkKey(KeyEvent.KEYCODE_V);
		checkKey(KeyEvent.KEYCODE_VOLUME_DOWN);
		checkKey(KeyEvent.KEYCODE_VOLUME_UP);
		checkKey(KeyEvent.KEYCODE_W);
		checkKey(KeyEvent.KEYCODE_X);
		checkKey(KeyEvent.KEYCODE_Y);
		checkKey(KeyEvent.KEYCODE_Z);				
		
		if (API >= 9) {			
			checkKey(KeyEvent.KEYCODE_BUTTON_A);
			checkKey(KeyEvent.KEYCODE_BUTTON_B);
			checkKey(KeyEvent.KEYCODE_BUTTON_C);
			checkKey(KeyEvent.KEYCODE_BUTTON_L1);
			checkKey(KeyEvent.KEYCODE_BUTTON_L2);
			checkKey(KeyEvent.KEYCODE_BUTTON_MODE);
			checkKey(KeyEvent.KEYCODE_BUTTON_R1);
			checkKey(KeyEvent.KEYCODE_BUTTON_R2);
			checkKey(KeyEvent.KEYCODE_BUTTON_SELECT);
			checkKey(KeyEvent.KEYCODE_BUTTON_START);
			checkKey(KeyEvent.KEYCODE_BUTTON_THUMBL);
			checkKey(KeyEvent.KEYCODE_BUTTON_THUMBR);
			checkKey(KeyEvent.KEYCODE_BUTTON_X);
			checkKey(KeyEvent.KEYCODE_BUTTON_Y);
			checkKey(KeyEvent.KEYCODE_BUTTON_Z);
			checkKey(KeyEvent.KEYCODE_PAGE_DOWN);
			checkKey(KeyEvent.KEYCODE_PAGE_UP);
			checkKey(KeyEvent.KEYCODE_PICTSYMBOLS);
			checkKey(KeyEvent.KEYCODE_SWITCH_CHARSET);			
		}
		
		if (API >= 11) {			
			checkKey(KeyEvent.KEYCODE_APP_SWITCH);
			checkKey(KeyEvent.KEYCODE_AVR_INPUT);
			checkKey(KeyEvent.KEYCODE_AVR_POWER);
			checkKey(KeyEvent.KEYCODE_BOOKMARK);
			checkKey(KeyEvent.KEYCODE_BREAK);
			checkKey(KeyEvent.KEYCODE_CAPS_LOCK);
			checkKey(KeyEvent.KEYCODE_CAPTIONS);
			checkKey(KeyEvent.KEYCODE_CHANNEL_DOWN);
			checkKey(KeyEvent.KEYCODE_CHANNEL_UP);
			checkKey(KeyEvent.KEYCODE_CTRL_LEFT);
			checkKey(KeyEvent.KEYCODE_CTRL_RIGHT);
			checkKey(KeyEvent.KEYCODE_DVR);
			checkKey(KeyEvent.KEYCODE_ESCAPE);
			checkKey(KeyEvent.KEYCODE_F1);
			checkKey(KeyEvent.KEYCODE_F10);
			checkKey(KeyEvent.KEYCODE_F11);
			checkKey(KeyEvent.KEYCODE_F12);
			checkKey(KeyEvent.KEYCODE_F2);
			checkKey(KeyEvent.KEYCODE_F3);
			checkKey(KeyEvent.KEYCODE_F4);
			checkKey(KeyEvent.KEYCODE_F5);
			checkKey(KeyEvent.KEYCODE_F6);
			checkKey(KeyEvent.KEYCODE_F7);
			checkKey(KeyEvent.KEYCODE_F8);
			checkKey(KeyEvent.KEYCODE_F9);
			checkKey(KeyEvent.KEYCODE_FORWARD);
			checkKey(KeyEvent.KEYCODE_FORWARD_DEL);
			checkKey(KeyEvent.KEYCODE_FUNCTION);
			checkKey(KeyEvent.KEYCODE_GUIDE);
			checkKey(KeyEvent.KEYCODE_INFO);
			checkKey(KeyEvent.KEYCODE_INSERT);
			checkKey(KeyEvent.KEYCODE_MEDIA_CLOSE);
			checkKey(KeyEvent.KEYCODE_MEDIA_EJECT);
			checkKey(KeyEvent.KEYCODE_MEDIA_PAUSE);
			checkKey(KeyEvent.KEYCODE_MEDIA_PLAY);
			checkKey(KeyEvent.KEYCODE_MEDIA_RECORD);
			checkKey(KeyEvent.KEYCODE_META_LEFT);
			checkKey(KeyEvent.KEYCODE_META_RIGHT);
			checkKey(KeyEvent.KEYCODE_MOVE_END);
			checkKey(KeyEvent.KEYCODE_MOVE_HOME);
			checkKey(KeyEvent.KEYCODE_NUMPAD_0);
			checkKey(KeyEvent.KEYCODE_NUMPAD_1);
			checkKey(KeyEvent.KEYCODE_NUMPAD_2);
			checkKey(KeyEvent.KEYCODE_NUMPAD_3);
			checkKey(KeyEvent.KEYCODE_NUMPAD_4);
			checkKey(KeyEvent.KEYCODE_NUMPAD_5);
			checkKey(KeyEvent.KEYCODE_NUMPAD_6);
			checkKey(KeyEvent.KEYCODE_NUMPAD_7);
			checkKey(KeyEvent.KEYCODE_NUMPAD_8);
			checkKey(KeyEvent.KEYCODE_NUMPAD_9);
			checkKey(KeyEvent.KEYCODE_NUMPAD_ADD);
			checkKey(KeyEvent.KEYCODE_NUMPAD_COMMA);
			checkKey(KeyEvent.KEYCODE_NUMPAD_DIVIDE);
			checkKey(KeyEvent.KEYCODE_NUMPAD_DOT);
			checkKey(KeyEvent.KEYCODE_NUMPAD_ENTER);
			checkKey(KeyEvent.KEYCODE_NUMPAD_EQUALS);
			checkKey(KeyEvent.KEYCODE_NUMPAD_LEFT_PAREN);
			checkKey(KeyEvent.KEYCODE_NUMPAD_MULTIPLY);
			checkKey(KeyEvent.KEYCODE_NUMPAD_RIGHT_PAREN);
			checkKey(KeyEvent.KEYCODE_NUMPAD_SUBTRACT);
			checkKey(KeyEvent.KEYCODE_NUM_LOCK);
			checkKey(KeyEvent.KEYCODE_PROG_BLUE);
			checkKey(KeyEvent.KEYCODE_PROG_GREEN);
			checkKey(KeyEvent.KEYCODE_PROG_RED);
			checkKey(KeyEvent.KEYCODE_PROG_YELLOW);
			checkKey(KeyEvent.KEYCODE_SCROLL_LOCK);
			checkKey(KeyEvent.KEYCODE_SETTINGS);
			checkKey(KeyEvent.KEYCODE_STB_INPUT);
			checkKey(KeyEvent.KEYCODE_STB_POWER);
			checkKey(KeyEvent.KEYCODE_SYSRQ);
			checkKey(KeyEvent.KEYCODE_TV);
			checkKey(KeyEvent.KEYCODE_TV_INPUT);
			checkKey(KeyEvent.KEYCODE_TV_POWER);
			checkKey(KeyEvent.KEYCODE_VOLUME_MUTE);
			checkKey(KeyEvent.KEYCODE_WINDOW);
			checkKey(KeyEvent.KEYCODE_ZOOM_IN);
			checkKey(KeyEvent.KEYCODE_ZOOM_OUT);			
		}
		
		if (API >= 12) {			
			checkKey(KeyEvent.KEYCODE_BUTTON_1);
			checkKey(KeyEvent.KEYCODE_BUTTON_10);
			checkKey(KeyEvent.KEYCODE_BUTTON_11);
			checkKey(KeyEvent.KEYCODE_BUTTON_12);
			checkKey(KeyEvent.KEYCODE_BUTTON_13);
			checkKey(KeyEvent.KEYCODE_BUTTON_14);
			checkKey(KeyEvent.KEYCODE_BUTTON_15);
			checkKey(KeyEvent.KEYCODE_BUTTON_16);
			checkKey(KeyEvent.KEYCODE_BUTTON_2);
			checkKey(KeyEvent.KEYCODE_BUTTON_3);
			checkKey(KeyEvent.KEYCODE_BUTTON_4);
			checkKey(KeyEvent.KEYCODE_BUTTON_5);
			checkKey(KeyEvent.KEYCODE_BUTTON_6);
			checkKey(KeyEvent.KEYCODE_BUTTON_7);
			checkKey(KeyEvent.KEYCODE_BUTTON_8);
			checkKey(KeyEvent.KEYCODE_BUTTON_9);		
		}
		
		if (API >= 14) {			
			checkKey(KeyEvent.KEYCODE_3D_MODE);
			checkKey(KeyEvent.KEYCODE_LANGUAGE_SWITCH);
			checkKey(KeyEvent.KEYCODE_MANNER_MODE);			
		}
		
		if (API >= 15) {			
			checkKey(KeyEvent.KEYCODE_CALCULATOR);
			checkKey(KeyEvent.KEYCODE_CALENDAR);
			checkKey(KeyEvent.KEYCODE_CONTACTS);
			checkKey(KeyEvent.KEYCODE_MUSIC);			
		}
	}
	
	
	
	public String getKeyName(int keyCode) {
		switch (keyCode) {
		case KeyEvent.KEYCODE_0: return KEYCODE_0;
		case KeyEvent.KEYCODE_1: return KEYCODE_1;
		case KeyEvent.KEYCODE_2: return KEYCODE_2;
		case KeyEvent.KEYCODE_3: return KEYCODE_3;
		case KeyEvent.KEYCODE_4: return KEYCODE_4;
		case KeyEvent.KEYCODE_5: return KEYCODE_5;
		case KeyEvent.KEYCODE_6: return KEYCODE_6;
		case KeyEvent.KEYCODE_7: return KEYCODE_7;
		case KeyEvent.KEYCODE_8: return KEYCODE_8;
		case KeyEvent.KEYCODE_9: return KEYCODE_9;
		case KeyEvent.KEYCODE_A: return KEYCODE_A;
		case KeyEvent.KEYCODE_ALT_LEFT: return KEYCODE_ALT_LEFT;
		case KeyEvent.KEYCODE_ALT_RIGHT: return KEYCODE_ALT_RIGHT;
		case KeyEvent.KEYCODE_APOSTROPHE: return KEYCODE_APOSTROPHE;		
		case KeyEvent.KEYCODE_AT: return KEYCODE_AT;
		case KeyEvent.KEYCODE_B: return KEYCODE_B;
		case KeyEvent.KEYCODE_BACK: return KEYCODE_BACK;
		case KeyEvent.KEYCODE_BACKSLASH: return KEYCODE_BACKSLASH;				
		case KeyEvent.KEYCODE_C: return KEYCODE_C;		
		case KeyEvent.KEYCODE_CALL: return KEYCODE_CALL;
		case KeyEvent.KEYCODE_CAMERA: return KEYCODE_CAMERA;		
		case KeyEvent.KEYCODE_CLEAR: return KEYCODE_CLEAR;
		case KeyEvent.KEYCODE_COMMA: return KEYCODE_COMMA;				
		case KeyEvent.KEYCODE_D: return KEYCODE_D;
		case KeyEvent.KEYCODE_DEL: return KEYCODE_DEL;
		case KeyEvent.KEYCODE_DPAD_CENTER: return KEYCODE_DPAD_CENTER;
		case KeyEvent.KEYCODE_DPAD_DOWN: return KEYCODE_DPAD_DOWN;
		case KeyEvent.KEYCODE_DPAD_LEFT: return KEYCODE_DPAD_LEFT;
		case KeyEvent.KEYCODE_DPAD_RIGHT: return KEYCODE_DPAD_RIGHT;
		case KeyEvent.KEYCODE_DPAD_UP: return KEYCODE_DPAD_UP;		
		case KeyEvent.KEYCODE_E: return KEYCODE_E;
		case KeyEvent.KEYCODE_ENDCALL: return KEYCODE_ENDCALL;
		case KeyEvent.KEYCODE_ENTER: return KEYCODE_ENTER;
		case KeyEvent.KEYCODE_ENVELOPE: return KEYCODE_ENVELOPE;
		case KeyEvent.KEYCODE_EQUALS: return KEYCODE_EQUALS;		
		case KeyEvent.KEYCODE_EXPLORER: return KEYCODE_EXPLORER;		
		case KeyEvent.KEYCODE_F: return KEYCODE_F;		
		case KeyEvent.KEYCODE_FOCUS: return KEYCODE_FOCUS;		
		case KeyEvent.KEYCODE_G: return KEYCODE_G;
		case KeyEvent.KEYCODE_GRAVE: return KEYCODE_GRAVE;		
		case KeyEvent.KEYCODE_H: return KEYCODE_H;
		case KeyEvent.KEYCODE_HEADSETHOOK: return KEYCODE_HEADSETHOOK;
		case KeyEvent.KEYCODE_HOME: return KEYCODE_HOME;
		case KeyEvent.KEYCODE_I: return KEYCODE_I;
		case KeyEvent.KEYCODE_J: return KEYCODE_J;
		case KeyEvent.KEYCODE_K: return KEYCODE_K;
		case KeyEvent.KEYCODE_L: return KEYCODE_L;		
		case KeyEvent.KEYCODE_LEFT_BRACKET: return KEYCODE_LEFT_BRACKET;
		case KeyEvent.KEYCODE_M: return KEYCODE_M;		
		case KeyEvent.KEYCODE_MEDIA_FAST_FORWARD: return KEYCODE_MEDIA_FAST_FORWARD;
		case KeyEvent.KEYCODE_MEDIA_NEXT: return KEYCODE_MEDIA_NEXT;		
		case KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE: return KEYCODE_MEDIA_PLAY_PAUSE;
		case KeyEvent.KEYCODE_MEDIA_PREVIOUS: return KEYCODE_MEDIA_PREVIOUS;		
		case KeyEvent.KEYCODE_MEDIA_REWIND: return KEYCODE_MEDIA_REWIND;
		case KeyEvent.KEYCODE_MEDIA_STOP: return KEYCODE_MEDIA_STOP;
		case KeyEvent.KEYCODE_MENU: return KEYCODE_MENU;	
		case KeyEvent.KEYCODE_MINUS: return KEYCODE_MINUS;				
		case KeyEvent.KEYCODE_MUTE: return KEYCODE_MUTE;
		case KeyEvent.KEYCODE_N: return KEYCODE_N;
		case KeyEvent.KEYCODE_NOTIFICATION: return KEYCODE_NOTIFICATION;
		case KeyEvent.KEYCODE_NUM: return KEYCODE_NUM;		
		case KeyEvent.KEYCODE_O: return KEYCODE_O;
		case KeyEvent.KEYCODE_P: return KEYCODE_P;		
		case KeyEvent.KEYCODE_PERIOD: return KEYCODE_PERIOD;		
		case KeyEvent.KEYCODE_PLUS: return KEYCODE_PLUS;
		case KeyEvent.KEYCODE_POUND: return KEYCODE_POUND;
		case KeyEvent.KEYCODE_POWER: return KEYCODE_POWER;		
		case KeyEvent.KEYCODE_Q: return KEYCODE_Q;
		case KeyEvent.KEYCODE_R: return KEYCODE_R;
		case KeyEvent.KEYCODE_RIGHT_BRACKET: return KEYCODE_RIGHT_BRACKET;
		case KeyEvent.KEYCODE_S: return KEYCODE_S;		
		case KeyEvent.KEYCODE_SEARCH: return KEYCODE_SEARCH;
		case KeyEvent.KEYCODE_SEMICOLON: return KEYCODE_SEMICOLON;		
		case KeyEvent.KEYCODE_SHIFT_LEFT: return KEYCODE_SHIFT_LEFT;
		case KeyEvent.KEYCODE_SHIFT_RIGHT: return KEYCODE_SHIFT_RIGHT;
		case KeyEvent.KEYCODE_SLASH: return KEYCODE_SLASH;
		case KeyEvent.KEYCODE_SOFT_LEFT: return KEYCODE_SOFT_LEFT;
		case KeyEvent.KEYCODE_SOFT_RIGHT: return KEYCODE_SOFT_RIGHT;
		case KeyEvent.KEYCODE_SPACE: return KEYCODE_SPACE;
		case KeyEvent.KEYCODE_STAR: return KEYCODE_STAR;				
		case KeyEvent.KEYCODE_SYM: return KEYCODE_SYM;		
		case KeyEvent.KEYCODE_T: return KEYCODE_T;
		case KeyEvent.KEYCODE_TAB: return KEYCODE_TAB;		
		case KeyEvent.KEYCODE_U: return KEYCODE_U;
		case KeyEvent.KEYCODE_UNKNOWN: return KEYCODE_UNKNOWN;
		case KeyEvent.KEYCODE_V: return KEYCODE_V;
		case KeyEvent.KEYCODE_VOLUME_DOWN: return KEYCODE_VOLUME_DOWN;		
		case KeyEvent.KEYCODE_VOLUME_UP: return KEYCODE_VOLUME_UP;
		case KeyEvent.KEYCODE_W: return KEYCODE_W;		
		case KeyEvent.KEYCODE_X: return KEYCODE_X;
		case KeyEvent.KEYCODE_Y: return KEYCODE_Y;
		case KeyEvent.KEYCODE_Z: return KEYCODE_Z;
			
		}
		
		if (API >= 9) {
			switch (keyCode) {
			case KeyEvent.KEYCODE_BUTTON_A: return KEYCODE_BUTTON_A;
			case KeyEvent.KEYCODE_BUTTON_B: return KEYCODE_BUTTON_B;
			case KeyEvent.KEYCODE_BUTTON_C: return KEYCODE_BUTTON_C;
			case KeyEvent.KEYCODE_BUTTON_L1: return KEYCODE_BUTTON_L1;
			case KeyEvent.KEYCODE_BUTTON_L2: return KEYCODE_BUTTON_L2;
			case KeyEvent.KEYCODE_BUTTON_MODE: return KEYCODE_BUTTON_MODE;
			case KeyEvent.KEYCODE_BUTTON_R1: return KEYCODE_BUTTON_R1;
			case KeyEvent.KEYCODE_BUTTON_R2: return KEYCODE_BUTTON_R2;
			case KeyEvent.KEYCODE_BUTTON_SELECT: return KEYCODE_BUTTON_SELECT;
			case KeyEvent.KEYCODE_BUTTON_START: return KEYCODE_BUTTON_START;
			case KeyEvent.KEYCODE_BUTTON_THUMBL: return KEYCODE_BUTTON_THUMBL;
			case KeyEvent.KEYCODE_BUTTON_THUMBR: return KEYCODE_BUTTON_THUMBR;
			case KeyEvent.KEYCODE_BUTTON_X: return KEYCODE_BUTTON_X;
			case KeyEvent.KEYCODE_BUTTON_Y: return KEYCODE_BUTTON_Y;
			case KeyEvent.KEYCODE_BUTTON_Z: return KEYCODE_BUTTON_Z;
			case KeyEvent.KEYCODE_PAGE_DOWN: return KEYCODE_PAGE_DOWN;
			case KeyEvent.KEYCODE_PAGE_UP: return KEYCODE_PAGE_UP;
			case KeyEvent.KEYCODE_PICTSYMBOLS: return KEYCODE_PICTSYMBOLS;
			case KeyEvent.KEYCODE_SWITCH_CHARSET: return KEYCODE_SWITCH_CHARSET;
			}
		}
		
		if (API >= 11) {
			switch (keyCode) {
			case KeyEvent.KEYCODE_APP_SWITCH: return KEYCODE_APP_SWITCH;
			case KeyEvent.KEYCODE_AVR_INPUT: return KEYCODE_AVR_INPUT;
			case KeyEvent.KEYCODE_AVR_POWER: return KEYCODE_AVR_POWER;
			case KeyEvent.KEYCODE_BOOKMARK: return KEYCODE_BOOKMARK;
			case KeyEvent.KEYCODE_BREAK: return KEYCODE_BREAK;
			case KeyEvent.KEYCODE_CAPS_LOCK: return KEYCODE_CAPS_LOCK;
			case KeyEvent.KEYCODE_CAPTIONS: return KEYCODE_CAPTIONS;
			case KeyEvent.KEYCODE_CHANNEL_DOWN: return KEYCODE_CHANNEL_DOWN;
			case KeyEvent.KEYCODE_CHANNEL_UP: return KEYCODE_CHANNEL_UP;
			case KeyEvent.KEYCODE_CTRL_LEFT: return KEYCODE_CTRL_LEFT;
			case KeyEvent.KEYCODE_CTRL_RIGHT: return KEYCODE_CTRL_RIGHT;
			case KeyEvent.KEYCODE_DVR: return KEYCODE_DVR;
			case KeyEvent.KEYCODE_ESCAPE: return KEYCODE_ESCAPE;
			case KeyEvent.KEYCODE_F1: return KEYCODE_F1;
			case KeyEvent.KEYCODE_F10: return KEYCODE_F10;
			case KeyEvent.KEYCODE_F11: return KEYCODE_F11;
			case KeyEvent.KEYCODE_F12: return KEYCODE_F12;
			case KeyEvent.KEYCODE_F2: return KEYCODE_F2;
			case KeyEvent.KEYCODE_F3: return KEYCODE_F3;
			case KeyEvent.KEYCODE_F4: return KEYCODE_F4;
			case KeyEvent.KEYCODE_F5: return KEYCODE_F5;
			case KeyEvent.KEYCODE_F6: return KEYCODE_F6;
			case KeyEvent.KEYCODE_F7: return KEYCODE_F7;
			case KeyEvent.KEYCODE_F8: return KEYCODE_F8;
			case KeyEvent.KEYCODE_F9: return KEYCODE_F9;
			case KeyEvent.KEYCODE_FORWARD: return KEYCODE_FORWARD;
			case KeyEvent.KEYCODE_FORWARD_DEL: return KEYCODE_FORWARD_DEL;
			case KeyEvent.KEYCODE_FUNCTION: return KEYCODE_FUNCTION;
			case KeyEvent.KEYCODE_GUIDE: return KEYCODE_GUIDE;
			case KeyEvent.KEYCODE_INFO: return KEYCODE_INFO;
			case KeyEvent.KEYCODE_INSERT: return KEYCODE_INSERT;
			case KeyEvent.KEYCODE_MEDIA_CLOSE: return KEYCODE_MEDIA_CLOSE;
			case KeyEvent.KEYCODE_MEDIA_EJECT: return KEYCODE_MEDIA_EJECT;
			case KeyEvent.KEYCODE_MEDIA_PAUSE: return KEYCODE_MEDIA_PAUSE;
			case KeyEvent.KEYCODE_MEDIA_PLAY: return KEYCODE_MEDIA_PLAY;
			case KeyEvent.KEYCODE_MEDIA_RECORD: return KEYCODE_MEDIA_RECORD;
			case KeyEvent.KEYCODE_META_LEFT: return KEYCODE_META_LEFT;
			case KeyEvent.KEYCODE_META_RIGHT: return KEYCODE_META_RIGHT;
			case KeyEvent.KEYCODE_MOVE_END: return KEYCODE_MOVE_END;
			case KeyEvent.KEYCODE_MOVE_HOME: return KEYCODE_MOVE_HOME;
			case KeyEvent.KEYCODE_NUMPAD_0: return KEYCODE_NUMPAD_0;
			case KeyEvent.KEYCODE_NUMPAD_1: return KEYCODE_NUMPAD_1;
			case KeyEvent.KEYCODE_NUMPAD_2: return KEYCODE_NUMPAD_2;
			case KeyEvent.KEYCODE_NUMPAD_3: return KEYCODE_NUMPAD_3;
			case KeyEvent.KEYCODE_NUMPAD_4: return KEYCODE_NUMPAD_4;
			case KeyEvent.KEYCODE_NUMPAD_5: return KEYCODE_NUMPAD_5;
			case KeyEvent.KEYCODE_NUMPAD_6: return KEYCODE_NUMPAD_6;
			case KeyEvent.KEYCODE_NUMPAD_7: return KEYCODE_NUMPAD_7;
			case KeyEvent.KEYCODE_NUMPAD_8: return KEYCODE_NUMPAD_8;
			case KeyEvent.KEYCODE_NUMPAD_9: return KEYCODE_NUMPAD_9;
			case KeyEvent.KEYCODE_NUMPAD_ADD: return KEYCODE_NUMPAD_ADD;
			case KeyEvent.KEYCODE_NUMPAD_COMMA: return KEYCODE_NUMPAD_COMMA;
			case KeyEvent.KEYCODE_NUMPAD_DIVIDE: return KEYCODE_NUMPAD_DIVIDE;
			case KeyEvent.KEYCODE_NUMPAD_DOT: return KEYCODE_NUMPAD_DOT;
			case KeyEvent.KEYCODE_NUMPAD_ENTER: return KEYCODE_NUMPAD_ENTER;
			case KeyEvent.KEYCODE_NUMPAD_EQUALS: return KEYCODE_NUMPAD_EQUALS;
			case KeyEvent.KEYCODE_NUMPAD_LEFT_PAREN: return KEYCODE_NUMPAD_LEFT_PAREN;
			case KeyEvent.KEYCODE_NUMPAD_MULTIPLY: return KEYCODE_NUMPAD_MULTIPLY;
			case KeyEvent.KEYCODE_NUMPAD_RIGHT_PAREN: return KEYCODE_NUMPAD_RIGHT_PAREN;
			case KeyEvent.KEYCODE_NUMPAD_SUBTRACT: return KEYCODE_NUMPAD_SUBTRACT;
			case KeyEvent.KEYCODE_NUM_LOCK: return KEYCODE_NUM_LOCK;
			case KeyEvent.KEYCODE_PROG_BLUE: return KEYCODE_PROG_BLUE;
			case KeyEvent.KEYCODE_PROG_GREEN: return KEYCODE_PROG_GREEN;
			case KeyEvent.KEYCODE_PROG_RED: return KEYCODE_PROG_RED;
			case KeyEvent.KEYCODE_PROG_YELLOW: return KEYCODE_PROG_YELLOW;
			case KeyEvent.KEYCODE_SCROLL_LOCK: return KEYCODE_SCROLL_LOCK;
			case KeyEvent.KEYCODE_SETTINGS: return KEYCODE_SETTINGS;
			case KeyEvent.KEYCODE_STB_INPUT: return KEYCODE_STB_INPUT;
			case KeyEvent.KEYCODE_STB_POWER: return KEYCODE_STB_POWER;
			case KeyEvent.KEYCODE_SYSRQ: return KEYCODE_SYSRQ;
			case KeyEvent.KEYCODE_TV: return KEYCODE_TV;
			case KeyEvent.KEYCODE_TV_INPUT: return KEYCODE_TV_INPUT;
			case KeyEvent.KEYCODE_TV_POWER: return KEYCODE_TV_POWER;
			case KeyEvent.KEYCODE_VOLUME_MUTE: return KEYCODE_VOLUME_MUTE;
			case KeyEvent.KEYCODE_WINDOW: return KEYCODE_WINDOW;
			case KeyEvent.KEYCODE_ZOOM_IN: return KEYCODE_ZOOM_IN;
			case KeyEvent.KEYCODE_ZOOM_OUT: return KEYCODE_ZOOM_OUT;
			}
		}
		
		if (API >= 12) {
			switch (keyCode) {
			case KeyEvent.KEYCODE_BUTTON_1: return KEYCODE_BUTTON_1;
			case KeyEvent.KEYCODE_BUTTON_10: return KEYCODE_BUTTON_10;
			case KeyEvent.KEYCODE_BUTTON_11: return KEYCODE_BUTTON_11;
			case KeyEvent.KEYCODE_BUTTON_12: return KEYCODE_BUTTON_12;
			case KeyEvent.KEYCODE_BUTTON_13: return KEYCODE_BUTTON_13;
			case KeyEvent.KEYCODE_BUTTON_14: return KEYCODE_BUTTON_14;
			case KeyEvent.KEYCODE_BUTTON_15: return KEYCODE_BUTTON_15;
			case KeyEvent.KEYCODE_BUTTON_16: return KEYCODE_BUTTON_16;
			case KeyEvent.KEYCODE_BUTTON_2: return KEYCODE_BUTTON_2;
			case KeyEvent.KEYCODE_BUTTON_3: return KEYCODE_BUTTON_3;
			case KeyEvent.KEYCODE_BUTTON_4: return KEYCODE_BUTTON_4;
			case KeyEvent.KEYCODE_BUTTON_5: return KEYCODE_BUTTON_5;
			case KeyEvent.KEYCODE_BUTTON_6: return KEYCODE_BUTTON_6;
			case KeyEvent.KEYCODE_BUTTON_7: return KEYCODE_BUTTON_7;
			case KeyEvent.KEYCODE_BUTTON_8: return KEYCODE_BUTTON_8;
			case KeyEvent.KEYCODE_BUTTON_9: return KEYCODE_BUTTON_9;
			}
		}
		
		if (API >= 14) {
			switch (keyCode) {
			case KeyEvent.KEYCODE_3D_MODE: return KEYCODE_3D_MODE;
			case KeyEvent.KEYCODE_LANGUAGE_SWITCH: return KEYCODE_LANGUAGE_SWITCH;
			case KeyEvent.KEYCODE_MANNER_MODE: return KEYCODE_MANNER_MODE;
			}
		}
		
		if (API >= 15) {
			switch (keyCode) {
			case KeyEvent.KEYCODE_CALCULATOR: return KEYCODE_CALCULATOR;
			case KeyEvent.KEYCODE_CALENDAR: return KEYCODE_CALENDAR;
			case KeyEvent.KEYCODE_CONTACTS: return KEYCODE_CONTACTS;
			case KeyEvent.KEYCODE_MUSIC: return KEYCODE_MUSIC;
			}
		}
		
		return null;
	}
}
